@model Merchandising.VM.Portal.VatVM
@{
    ViewBag.Title = "Vat";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-7 col-md-7 col-lg-7">
        <h2>Vat</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Home_Index", "Home")">Home</a>
            </li>
            <li>
                <a>Administration</a>
            </li>
            <li>
                <a>Set-Up</a>
            </li>
            <li>
                <a>General</a>
            </li>
            <li class="active">
                <strong>Vat</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox-heading">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <div class="row">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-horizontal">
                            <div class="col-sm-5 col-md-5 col-lg-5">
                                <h3>List of Vat</h3>
                            </div>
                            <div class="col-sm-7 col-md-7 col-lg-7">
                                <div class="form-group pull-right">
                                    <button type="button" class="btn btn-outline btn-rounded btn-primary" onclick="location.href='@Url.Action("Index", "Vat")'"><i class="fa fa-refresh"></i> Refresh</button>
                                    <button type="button" class="btn btn-outline btn-rounded btn-primary" id="add"><i class="fa fa-plus-circle"></i> Create New</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-horizontal">
                            @*<div class="col-md-2">
                                    @Html.DropDownList("Filter", null, "", new { @class = "form-control chosen-select", @id = "filter" })
                                </div>*@
                            <div class="col-md-12">
                                <div class="form-group">
                                    <input type="text" class="form-control" id="txtsearch" placeholder="Search" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ibox-content m-b-sm border-bottom">
        <div class="row">
            <div class="col-xs-12 col-md-12 col-lg-12">
                <div id="demoContent">
                    @{
                        var linkFormat = "<a id='doc_.(Code)' class='view_doc'>.(Code)</a>";
                        var linkIconFormat = "<button type='button' id='doc_.(Code)' class='edit_doc btn btn-warning'><i class='fa fa-pencil'></i></button>&nbsp;&nbsp;";
                        linkIconFormat += "<a id='doc_.(Code)' class='cancel_doc btn btn-danger'><i class='fa fa-trash'></i></a>";
                    }
                    @(Html.Awe().Grid("ApiDemoGrid")
                                                                                            .Columns(new[]
                                                                                            {
                                                                                                                                new Column{ClientFormat= linkIconFormat, Width = 120},
                                                                                                                                new Column {Bind = "Code", Header = "Vat Code",ClientFormat = linkFormat},
                                                                                                                                new Column {Bind = "Name", Header = "Vat Name"  },
                                                                                                                                new Column {Bind = "Type", Header = "Type"  },
                                                                                                                                new Column {Bind = "Percentage", Header = "Percentage"  },
                                                                                                                                new Column {Bind = "Status", Header = "Status", ClientFormatFunc = "Statustoggle", Width = 90},
                                                                                                                                new Column {Bind = "EffectiveFrom", Header = "Effective From"},
                                                                                                                                new Column {Bind = "EffectiveTo", Header = "Effective To"}
                                                                                            })
                                                                                            .Mod(o => o.PageInfo().PageSize().ColumnsSelector())
                                                                                            .Resizable()
                                                                                            .Reorderable()
                                                                                            .Height(400)
                                                                                            .Groupable(false)
                                                                                            .Selectable(SelectionType.Single)
                                                                                            .Parent("filter", "filter")
                                                                                            .Parent("txtsearch", "search")
                                                                                            .Url(Url.Action("GetList", "Vat")))

                </div>
            </div>
        </div>
    </div>
</div>

<!--Creation of Vat-->
<div class="modal fade" id="MyModalVat">
    <div class="modal-dialog" style="width:50%">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="ModalTitle">Create Vat</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vat.Code, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            @Html.EditorFor(model => model.Vat.Code, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "vatid" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vat.Name, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            @Html.EditorFor(model => model.Vat.Name, new { htmlAttributes = new { @class = "form-control text-uppercase", id = "vatname" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.VatOption, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            @Html.DropDownListFor(model => model.Vat.Type, new SelectList(Model.VatOption, "Value", "Text"), "- Please select vat type -", new { @class = "form-control chosen-select", @id = "type" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vat.Percentage, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            @Html.EditorFor(model => model.Vat.Percentage, new { htmlAttributes = new { @class = "form-control text-right", @placeholder = "0.00", @id = "percentage", @onkeypress = "return isNumberKey(event)" } })
                             <input type="hidden" id="oldperc"/>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StatusOption, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="checkbox checkbox-success checkbox-circle">
                                <input id="status" type="checkbox">
                                <label for="checkbox8">
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="data_1">
                        @Html.LabelFor(model => model.Vat.EffectiveFrom, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>@Html.EditorFor(model => model.Vat.EffectiveFrom, new { htmlAttributes = new { @class = "form-control", @id = "effectivefrom", @readonly = "true" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-group" id="data_1">
                        @Html.LabelFor(model => model.Vat.EffectiveTo, htmlAttributes: new { @class = "control-label col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-9 col-sm-9 col-md-9 col-lg-9">
                            <div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>@Html.EditorFor(model => model.Vat.EffectiveTo, new { htmlAttributes = new { @class = "form-control", @id = "effectiveto", @readonly = "true" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-12 col-md-12 col-lg-12">
                            <div class="pull-right">
                                <button type="button" class="btn btn-outline btn-rounded btn-primary" id="vat">Add Vat</button>
                                <button type="button" class="btn btn-outline btn-rounded btn-warning" id="clear">Clear</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/laddaStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    <link href="~/Content/plugins/sweetalert/sweetalert2.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
}

@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/iCheck")
    <script src="~/Scripts/bootstap-toggle.js"></script>
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/switchery")
    <script src="~/Scripts/plugins/sweetalert/sweetalert2.min.js"></script>
    <script src="~/Scripts/MerchandisingJS/Vat/Vat.js"></script>
}
<style>
    .boldh .awe-col, .boldh {
        color: blue;
    }

    .bluev {
        color: blueviolet;
    }

    .pinkb {
        background: pink !important;
    }

    .greenb {
        background: #f0f9f7 !important;
    }
</style>

